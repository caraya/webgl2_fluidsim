"use strict";var e=document.querySelector("#fluidsim_canvas");const v=e.getContext("webgl2");v.getExtension("EXT_color_buffer_float");let o={i:1,o:.5,t:"dye",v:.1,u:.99,l:.99,p:128,_:1024},t,r,c,s,u;function i(e){return t<1?{width:e,height:Math.round(e/t)}:{width:Math.round(e*t),height:e}}function x(){var e=v.canvas.clientWidth,n=v.canvas.clientHeight;if(t=v.canvas.clientWidth/v.canvas.clientHeight,v.canvas.width!==e||v.canvas.height!==n)return v.canvas.width=e,v.canvas.height=n,e=i(o.p),n=i(o._),r=e.width,c=e.height,s=n.width,u=n.height,1}x();let l=v.createVertexArray(),a=v.createVertexArray();const p=0;function _(e,n,i,o,t,r,c){v.bindVertexArray(e);e=v.createBuffer();v.bindBuffer(v.ARRAY_BUFFER,e),v.bufferData(v.ARRAY_BUFFER,n,v.STATIC_DRAW),v.enableVertexAttribArray(p),v.vertexAttribPointer(p,i,o,t,r,c)}function R(){var e=1/r,n=1/c,e=new Float32Array([e-1,n-1,1-e,1-n,1-e,n-1,e-1,n-1,e-1,1-n,1-e,1-n]),n=(_(l,e,2,v.FLOAT,!1,0,0),new Float32Array([-1,-1,1,1,1,-1,-1,-1,-1,1,1,1]));_(a,n,2,v.FLOAT,!1,0,0)}R();var n=`#version 300 es
in vec2 a_position;
out vec2 v_position;

void main() {
  v_position = a_position * 0.5 + 0.5;
  gl_Position = vec4(a_position, 0, 1);
}`;function U(e,n,i){n=e.createShader(n);return e.shaderSource(n,i),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS)?n:(console.error(e.getShaderInfoLog(n)),e.deleteShader(n),null)}function h(e,n){var i,o,e=U(v,v.VERTEX_SHADER,e),n=U(v,v.FRAGMENT_SHADER,n),e=(i=v,e=e,n=n,o=i.createProgram(),i.attachShader(o,e),i.attachShader(o,n),i.linkProgram(o),i.getProgramParameter(o,i.LINK_STATUS)?o:(console.error(i.getProgramInfoLog(o)),i.deleteProgram(o),null)),n=function(n,i){var o={},t=n.getProgramParameter(i,n.ACTIVE_UNIFORMS);for(let e=0;e<t;++e){var r=n.getActiveUniform(i,e);o[r.name]=n.getUniformLocation(i,r.name)}return o}(v,e);return v.bindAttribLocation(e,p,"a_position"),{h:e,m:n}}const f=h(n,`#version 300 es
precision highp float;

in vec2 v_position;
uniform sampler2D u_v;
uniform sampler2D u_x;
uniform float u_dt;
uniform float u_dissipation;
out vec4 res;

vec4 bilerp(sampler2D tex, vec2 x_norm, vec2 size) {
  vec2 x = x_norm * size;
  vec2 fx = fract(x);
  ivec2 ix = ivec2(floor(x));

  vec4 x00 = texelFetch(tex, ix + ivec2(0,0), 0);
  vec4 x01 = texelFetch(tex, ix + ivec2(0,1), 0);
  vec4 x10 = texelFetch(tex, ix + ivec2(1,0), 0);
  vec4 x11 = texelFetch(tex, ix + ivec2(1,1), 0);

  return mix(mix(x00, x10, fx.x), mix(x01, x11, fx.x), fx.y);
}

void main() {
  vec2 size_v = vec2(textureSize(u_v, 0));
  vec2 size_x = vec2(textureSize(u_x, 0));
  vec2 aspect_ratio = vec2(size_x.x / size_x.y, 1.0);
  vec2 normalized_pos = floor(gl_FragCoord.xy) / size_x;
  vec2 prev = normalized_pos - u_dt * bilerp(u_v, normalized_pos, size_v).xy / aspect_ratio; 
  res = u_dissipation * bilerp(u_x, prev, size_x);
}`),d=h(n,`#version 300 es
precision highp float;

uniform sampler2D u_u;
uniform sampler2D u_v;
uniform float u_alpha;
out vec4 res;

void main() {
  ivec2 pos = ivec2(gl_FragCoord.xy); 
  res = texelFetch(u_u, pos, 0) + u_alpha * texelFetch(u_v, pos, 0);
}`),m=h(n,"#version 300 es\nprecision highp float;\n\nuniform sampler2D u_x;\nuniform float u_nu;\nuniform float u_dt;\nout vec4 res;\n\n\nstruct Neighbors {\n  vec4 l;\n  vec4 r;\n  vec4 t;\n  vec4 b;\n  vec4 c;\n};\n\nNeighbors tex_neighbors(sampler2D tex, ivec2 pos) {\n  vec4 b = texelFetch(tex, pos - ivec2(0, 1), 0);\n  vec4 t = texelFetch(tex, pos + ivec2(0, 1), 0);\n  vec4 l = texelFetch(tex, pos - ivec2(1, 0), 0);\n  vec4 r = texelFetch(tex, pos + ivec2(1, 0), 0);\n  vec4 c = texelFetch(tex, pos, 0);\n  return Neighbors(l, r, t, b, c);\n}\n\nvoid main() {\n  ivec2 pos = ivec2(gl_FragCoord.xy); \n  Neighbors n = tex_neighbors(u_x, pos);\n  vec2 new_x = (u_nu * u_dt * (n.b.xy + n.t.xy + n.l.xy + n.r.xy) + n.c.xy) / (1. + 4. * u_nu * u_dt);\n  res = vec4(new_x, 0.0, 1.0);\n}\n"),b=h(n,"#version 300 es\nprecision highp float;\n\nuniform sampler2D u_x;\nuniform sampler2D u_div_v;\nout vec4 res;\n\n\nstruct Neighbors {\n  vec4 l;\n  vec4 r;\n  vec4 t;\n  vec4 b;\n  vec4 c;\n};\n\nNeighbors tex_neighbors(sampler2D tex, ivec2 pos) {\n  vec4 b = texelFetch(tex, pos - ivec2(0, 1), 0);\n  vec4 t = texelFetch(tex, pos + ivec2(0, 1), 0);\n  vec4 l = texelFetch(tex, pos - ivec2(1, 0), 0);\n  vec4 r = texelFetch(tex, pos + ivec2(1, 0), 0);\n  vec4 c = texelFetch(tex, pos, 0);\n  return Neighbors(l, r, t, b, c);\n}\n\nvoid main() {\n  ivec2 pos = ivec2(gl_FragCoord.xy); \n  Neighbors n = tex_neighbors(u_x, pos);\n  float div_v = texelFetch(u_div_v, pos, 0).x;\n  float new_x = (n.b.x + n.t.x + n.l.x + n.r.x - div_v) / 4.;\n  res = vec4(new_x, 0.0, 0.0, 1.0);\n}\n"),L=h(n,"#version 300 es\nprecision highp float;\n\nuniform sampler2D u_x;\nout vec4 res;\n\n\nstruct Neighbors {\n  vec4 l;\n  vec4 r;\n  vec4 t;\n  vec4 b;\n  vec4 c;\n};\n\nNeighbors tex_neighbors(sampler2D tex, ivec2 pos) {\n  vec4 b = texelFetch(tex, pos - ivec2(0, 1), 0);\n  vec4 t = texelFetch(tex, pos + ivec2(0, 1), 0);\n  vec4 l = texelFetch(tex, pos - ivec2(1, 0), 0);\n  vec4 r = texelFetch(tex, pos + ivec2(1, 0), 0);\n  vec4 c = texelFetch(tex, pos, 0);\n  return Neighbors(l, r, t, b, c);\n}\n\nvoid main() {\n  ivec2 pos = ivec2(gl_FragCoord.xy); \n  Neighbors n = tex_neighbors(u_x, pos);\n\n  float grad_x = (n.r.x - n.l.x) / 2.;\n  float grad_y = (n.t.x - n.b.x) / 2.;\n\n  res = vec4(grad_x, grad_y, 0, 1);\n}"),Y=h(n,"#version 300 es\nprecision highp float;\n\nuniform sampler2D u_x;\nout vec4 res;\n\n\nstruct Neighbors {\n  vec4 l;\n  vec4 r;\n  vec4 t;\n  vec4 b;\n  vec4 c;\n};\n\nNeighbors tex_neighbors(sampler2D tex, ivec2 pos) {\n  vec4 b = texelFetch(tex, pos - ivec2(0, 1), 0);\n  vec4 t = texelFetch(tex, pos + ivec2(0, 1), 0);\n  vec4 l = texelFetch(tex, pos - ivec2(1, 0), 0);\n  vec4 r = texelFetch(tex, pos + ivec2(1, 0), 0);\n  vec4 c = texelFetch(tex, pos, 0);\n  return Neighbors(l, r, t, b, c);\n}\n\nvoid main() {\n  ivec2 pos = ivec2(gl_FragCoord.xy); \n  Neighbors n = tex_neighbors(u_x, pos);\n\n  float div = (n.r.x - n.l.x + n.t.y - n.b.y) / 2.;\n\n  res = vec4(div, 0, 0, 1);\n}"),g=h(n,`#version 300 es
precision highp float;

in vec2 v_position;
uniform sampler2D u_x;
uniform float u_alpha;
out vec4 res;

void main() {
  ivec2 pos = ivec2(gl_FragCoord.xy);
  ivec2 size = textureSize(u_x, 0);
  int border_l = 1 - min(pos.x, 1);
  int border_r = 1 - min(size.x - 1 - pos.x, 1);
  int border_b = 1 - min(pos.y, 1);
  int border_t = 1 - min(size.y - 1 - pos.y, 1);
  int border = min(border_l + border_r + border_b + border_t, 1);
  float coef = (border > 0) ? u_alpha : 1.0; 
  ivec2 direction = ivec2(border_l - border_r, border_b - border_t); 
 
  res = coef  * texelFetch(u_x, pos + direction, 0);
}`),F=h(n,`#version 300 es
precision highp float;

in vec2 v_position;
uniform sampler2D u_x;
out vec4 res;

void main() {
  res = texture(u_x, v_position);
}`),y=h(n,`#version 300 es
precision highp float;

in vec2 v_position;
uniform sampler2D u_x;
uniform vec2 u_point;
uniform vec3 u_value;
uniform float u_radius;
uniform float u_ratio;
out vec4 res;

void main() {
  vec4 init = texture(u_x, v_position);
  vec2 v = v_position - u_point;
  v.x *= u_ratio;
  vec3 force = exp(-dot(v,v)/u_radius) * u_value;

  res = vec4(init.xyz + force, 1.);
}`),D=h(n,`#version 300 es
precision highp float;

uniform sampler2D u_x;
uniform float u_alpha;
out vec4 res;

void main() {
  ivec2 pos = ivec2(gl_FragCoord.xy); 
  res = u_alpha * texelFetch(u_x, pos, 0);
}`);function N(e,n,i,o,t,r){const c=v.createTexture(),s=(v.activeTexture(v.TEXTURE0),v.bindTexture(v.TEXTURE_2D,c),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MIN_FILTER,r),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MAG_FILTER,r),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE),v.texImage2D(v.TEXTURE_2D,0,i,e,n,0,o,t,null),v.createFramebuffer());return v.bindFramebuffer(v.FRAMEBUFFER,s),v.framebufferTexture2D(v.FRAMEBUFFER,v.COLOR_ATTACHMENT0,v.TEXTURE_2D,c,0),{g:c,F:s,bind:()=>{v.bindFramebuffer(v.FRAMEBUFFER,s),v.viewport(0,0,e,n)},D:e=>(v.activeTexture(v.TEXTURE0+e),v.bindTexture(v.TEXTURE_2D,c),e)}}function z(e,n,i,o,t,r){return{read:N(e,n,i,o,t,r),write:N(e,n,i,o,t,r),N:function(){var e=this.read;this.read=this.write,this.write=e}}}function q(e,n,i,o,t,r,c){n=N(n,i,o,t,r,c);return v.useProgram(F.h),v.uniform1i(F.m.u_x,e.D(0)),M(n,a,v.TRIANGLES,6),n}function S(e,n,i,o,t,r,c){var s=z(n,i,o,t,r,c);return s.read=q(e.read,n,i,o,t,r,c),s.write=q(e.write,n,i,o,t,r,c),s}let w=z(r,c,v.RG32F,v.RG,v.FLOAT,v.NEAREST),I=z(r,c,v.R32F,v.RED,v.FLOAT,v.NEAREST),C=N(r,c,v.R32F,v.RED,v.FLOAT,v.NEAREST),A=N(r,c,v.RG32F,v.RG,v.FLOAT,v.NEAREST),E=z(s,u,v.RGBA32F,v.RGBA,v.FLOAT,v.NEAREST);const V={g:null,F:null,bind:()=>{v.bindFramebuffer(v.FRAMEBUFFER,null),v.viewport(0,0,v.canvas.width,v.canvas.height)}};function M(e,n,i,o,t=!1){v.bindVertexArray(n),e.bind(),t&&(v.clearColor(0,0,0,1),v.clear(v.COLOR_BUFFER_BIT)),v.drawArrays(i,0,o)}function O(e,n){v.useProgram(g.h),v.uniform1i(g.m.u_x,e.read.D(0)),v.uniform1f(g.m.u_alpha,n),M(e.write,a,v.TRIANGLES,6),e.N()}let X=0;requestAnimationFrame(function e(n){var i=(n-X)/1e3,n=(X=n,x()&&(R(),w=S(w,r,c,v.RG32F,v.RG,v.FLOAT,v.NEAREST),I=S(I,r,c,v.R32F,v.RED,v.FLOAT,v.NEAREST),E=S(E,s,u,v.RGBA32F,v.RGBA,v.FLOAT,v.NEAREST),C=N(r,c,v.R32F,v.RED,v.FLOAT,v.NEAREST),A=N(r,c,v.RG32F,v.RG,v.FLOAT,v.NEAREST)),T.forEach(e=>{v.useProgram(y.h),v.uniform1i(y.m.u_x,w.read.D(0)),v.uniform2fv(y.m.u_point,[e.x,e.y]),v.uniform3fv(y.m.u_value,[e.dx*t,e.dy,0].map(e=>20*e)),v.uniform1f(y.m.u_radius,o.v),v.uniform1f(y.m.u_ratio,t),M(w.write,l,v.TRIANGLES,6),w.N(),v.uniform1i(y.m.u_x,E.read.D(0)),v.uniform3fv(y.m.u_value,e.color.map(e=>.2*e)),M(E.write,l,v.TRIANGLES,6),E.N()}),i);O(w,-1),v.useProgram(f.h),v.uniform1i(f.m.u_v,0),v.uniform1i(f.m.u_x,w.read.D(0)),v.uniform1f(f.m.u_dt,n),v.uniform1f(f.m.u_dissipation,o.u),M(w.write,l,v.TRIANGLES,6),w.N(),O(E,0),v.useProgram(f.h),v.uniform1i(f.m.u_v,w.read.D(0)),v.uniform1i(f.m.u_x,E.read.D(1)),v.uniform1f(f.m.u_dt,n),v.uniform1f(f.m.u_dissipation,o.l),M(E.write,l,v.TRIANGLES,6),E.N(),O(w,-1),v.useProgram(m.h),v.uniform1f(m.m.u_nu,o.i),v.uniform1f(m.m.u_dt,n);for(let e=0;e<20;e++)v.uniform1i(m.m.u_x,w.read.D(0)),M(w.write,l,v.TRIANGLES,6),w.N();O(w,-1),v.useProgram(Y.h),v.uniform1i(Y.m.u_x,w.read.D(0)),M(C,l,v.TRIANGLES,6),v.useProgram(D.h),v.uniform1i(D.m.u_x,I.read.D(0)),v.uniform1f(D.m.u_alpha,o.o),M(I.write,a,v.TRIANGLES,6),I.N();for(let e=0;e<40;e++)O(I,1),v.useProgram(b.h),v.uniform1i(b.m.u_div_v,C.D(0)),v.uniform1i(b.m.u_x,I.read.D(1)),M(I.write,l,v.TRIANGLES,6),I.N();O(w,-1),O(I,1),v.useProgram(L.h),v.uniform1i(L.m.u_x,I.read.D(0)),M(A,l,v.TRIANGLES,6),v.useProgram(d.h),v.uniform1i(d.m.u_u,w.read.D(0)),v.uniform1i(d.m.u_v,A.D(1)),v.uniform1f(d.m.u_alpha,-1),M(w.write,l,v.TRIANGLES,6),w.N(),i=("velocity"==o.t?w:"pressure"==o.t?I:E).read,v.useProgram(F.h),v.uniform1i(F.m.u_x,i.D(0)),M(V,a,v.TRIANGLES,6),requestAnimationFrame(e)});const T=[];function j(e){return{id:e.pointerId,x:e.offsetX/v.canvas.clientWidth,y:1-e.offsetY/v.canvas.clientHeight,dx:0,dy:0,color:[Math.random(),Math.random(),Math.random()]}}e.addEventListener("pointerdown",e=>{T.push(j(e))}),e.addEventListener("pointerup",n=>{var e=T.findIndex(e=>e.id===n.pointerId);e<0||T.splice(e,1)}),e.addEventListener("pointermove",n=>{var e,i=T.findIndex(e=>e.id===n.pointerId);i<0||(e=j(n),T[i]=(i=T[i],(e=e).color=i.color,e.dx=e.x-i.x,e.dy=e.y-i.y,e))}),e.addEventListener("pointerout",n=>{var e=T.findIndex(e=>e.id===n.pointerId);e<0||T.splice(e,1)});var n=document.querySelector("#viscosity"),e=document.querySelector("#pressure"),k=document.querySelector("#radius"),B=document.querySelector("#velocity_dissipation"),G=document.querySelector("#density_dissipation"),H=document.querySelector("#display_radio");function P(e,n,i){return n*Math.pow(i/n,e)}const J=e=>P(e,1e-4,1e3),K=e=>P(e,1e-4,.01),Q=e=>1-P(e,.001,.1),W=e=>1-P(e,.001,.1);o.i=J(n.value),o.o=e.value,o.v=K(k.value),o.u=Q(B.value),o.l=W(G.value),n.addEventListener("input",e=>{o.i=J(e.target.value)}),e.addEventListener("input",e=>{o.o=e.target.value}),k.addEventListener("input",e=>{o.v=K(e.target.value)}),B.addEventListener("input",e=>{o.u=Q(e.target.value)}),G.addEventListener("input",e=>{o.l=W(e.target.value)}),H.addEventListener("input",e=>{o.t=e.target.value});